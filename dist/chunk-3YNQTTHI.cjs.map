{"version":3,"sources":["/Users/happy/Documents/purevanilla/js/dist/chunk-3YNQTTHI.cjs","../src/voting/Voting.ts"],"names":["Voting","client","member","callback","display","ban","ws","dispose"],"mappings":"AAAA,iIAAwC,ICInBA,CAAAA,CAArB,KAA4B,CAIxB,WAAA,CAAYC,CAAAA,CAAqB,CAC7B,IAAA,CAAK,MAAA,CAASA,CAClB,CAEO,SAAA,CAAUC,CAAAA,CAAgBC,CAAAA,CAAW,CAACC,CAAAA,CAA8BC,CAAAA,CAAAA,EAAe,CAAE,CAAA,CAAG,CAC3F,GAAM,CAAE,EAAA,CAAAC,CAAAA,CAAI,OAAA,CAAAC,CAAQ,CAAA,CAAI,IAAA,CAAK,MAAA,CAAO,MAAA,CAAO,CAAA,gBAAA,EAAmBL,CAAAA,CAAO,EAAE,CAAA,CAAA","file":"/Users/happy/Documents/purevanilla/js/dist/chunk-3YNQTTHI.cjs","sourcesContent":[null,"import Member from \"../Member.js\"\nimport Serverbench from \"../Serverbench.js\"\nimport ListingDisplay from \"./ListingDisplay.js\"\n\nexport default class Voting {\n\n    private readonly client: Serverbench\n\n    constructor(client: Serverbench) {\n        this.client = client\n    }\n\n    public subscribe(member: Member, callback = (display: ListingDisplay|null, ban?: Date) => { }) {\n        const { ws, dispose } = this.client.socket(`listing.display.${member.id}`, (data) => {\n            if(data.ban){\n                return callback(null, new Date(data.ban))\n            }\n            callback(ListingDisplay.fromObject(this.client, data))\n        })\n        return dispose\n    }\n\n}"]}