{"version":3,"sources":["../src/Serverbench.ts"],"sourcesContent":["import Store from \"./store/Store.js\"\r\n\r\nexport default class Serverbench {\r\n\r\n    clientId: string\r\n    clientSecret: string\r\n    test: boolean\r\n\r\n    private static instance: Serverbench | null = null\r\n\r\n    private constructor(clientId: string, clientSecret: string, test: boolean) {\r\n        this.clientId = clientId\r\n        this.clientSecret = clientSecret\r\n        this.test = test\r\n    }\r\n\r\n    static get(clientId: string, clientSecret: string, test: boolean = false) {\r\n        if (!Serverbench.instance || Serverbench.instance.clientId !== clientId || Serverbench.instance.clientSecret !== clientSecret || Serverbench.instance.test !== test) {\r\n            Serverbench.instance = new Serverbench(clientId, clientSecret, test)\r\n        }\r\n        return Serverbench.instance\r\n    }\r\n\r\n    get store() {\r\n        return new Store(this)\r\n    }\r\n\r\n    private async fetch(realm: string, url: string, body?: any) {\r\n        const domain = this.test ? 'https://dev.serverbench.io' : 'https://api.serverbench.io'\r\n        const headers = new Headers({\r\n            authorization: `ApiKey ${this.clientSecret}`,\r\n        })\r\n        if (body) {\r\n            headers.set('Content-Type', 'application/json')\r\n        }\r\n        const response = await fetch(`${domain}/${realm}/${this.clientId}${url}`, {\r\n            headers,\r\n            method: body ? 'POST' : 'GET',\r\n            body: body ? JSON.stringify(body) : undefined\r\n        })\r\n        return response.json()\r\n    }\r\n\r\n    async get(realm: string, url: string) {\r\n        return this.fetch(realm, url)\r\n    }\r\n\r\n    async post(realm: string, url: string, body: any = {}) {\r\n        return this.fetch(realm, url, body)\r\n    }\r\n\r\n}"],"mappings":"mCAEA,IAAqBA,EAArB,MAAqBA,CAAY,CAQrB,YAAYC,EAAkBC,EAAsBC,EAAe,CACvE,KAAK,SAAWF,EAChB,KAAK,aAAeC,EACpB,KAAK,KAAOC,CAChB,CAEA,OAAO,IAAIF,EAAkBC,EAAsBC,EAAgB,GAAO,CACtE,OAAI,CAACH,EAAY,UAAYA,EAAY,SAAS,WAAaC,GAAYD,EAAY,SAAS,eAAiBE,GAAgBF,EAAY,SAAS,OAASG,KAC3JH,EAAY,SAAW,IAAIA,EAAYC,EAAUC,EAAcC,CAAI,GAEhEH,EAAY,QACvB,CAEA,IAAI,OAAQ,CACR,OAAO,IAAII,EAAM,IAAI,CACzB,CAEA,MAAc,MAAMC,EAAeC,EAAaC,EAAY,CACxD,IAAMC,EAAS,KAAK,KAAO,6BAA+B,6BACpDC,EAAU,IAAI,QAAQ,CACxB,cAAe,UAAU,KAAK,YAAY,EAC9C,CAAC,EACD,OAAIF,GACAE,EAAQ,IAAI,eAAgB,kBAAkB,GAEjC,MAAM,MAAM,GAAGD,CAAM,IAAIH,CAAK,IAAI,KAAK,QAAQ,GAAGC,CAAG,GAAI,CACtE,QAAAG,EACA,OAAQF,EAAO,OAAS,MACxB,KAAMA,EAAO,KAAK,UAAUA,CAAI,EAAI,MACxC,CAAC,GACe,KAAK,CACzB,CAEA,MAAM,IAAIF,EAAeC,EAAa,CAClC,OAAO,KAAK,MAAMD,EAAOC,CAAG,CAChC,CAEA,MAAM,KAAKD,EAAeC,EAAaC,EAAY,CAAC,EAAG,CACnD,OAAO,KAAK,MAAMF,EAAOC,EAAKC,CAAI,CACtC,CAEJ,EAjDqBP,EAMF,SAA+B,KANlD,IAAqBU,EAArBV","names":["_Serverbench","clientId","clientSecret","test","Store","realm","url","body","domain","headers","Serverbench"]}